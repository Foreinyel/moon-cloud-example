version: '3.4'

services: 
  elasticsearch:
    # name: moon-elasticsearch
    restart: always
    hostname: elasticsearch
    image: "elasticsearch:${ES_VERSION}"
    environment:
      - discovery.type=single-node
    volumes:
      - /etc/localtime:/etc/localtime
      - ./docker_es/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  logstash:
    # name: moon-logstash
    restart: always
    hostname: logstash
    depends_on:
      - elasticsearch
    image: "logstash:${ES_VERSION}"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
      - "15044:15044/tcp"
    links:
      - elasticsearch

  kibana:
    # name: moon-kibana
    restart: always
    hostname: kibana
    depends_on:
      - elasticsearch
    image: "kibana:${ES_VERSION}"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - /etc/localtime:/etc/localtime
    ports:
      - "5601:5601"
    links:
      - elasticsearch
    
  zoo1:
    # name: moon-zoo1
    networks:
      - default
    image: zookeeper:3.5.8
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      TZ: Asia/Shanghai

  zoo2:
    # name: moon-zoo2
    networks:
      - default
    image: zookeeper:3.5.8
    restart: always
    hostname: zoo2
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zoo3:2888:3888;2181
      TZ: Asia/Shanghai

  zoo3:
    # name: moon-zoo3
    networks:
      - default
    image: zookeeper:3.5.8
    restart: always
    hostname: zoo3
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181
      TZ: Asia/Shanghai

  kafka:
    # name: moon-kafka
    image: 'bitnami/kafka:2.8.0'
    ports:
      - '9092:9092'
      - '9999:9999'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      # 客户端访问地址，更换成自己的
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zoo1:2181
      # 允许使用PLAINTEXT协议(镜像中默认为关闭,需要手动开启)
      - ALLOW_PLAINTEXT_LISTENER=yes
      # 关闭自动创建 topic 功能
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      # 全局消息过期时间 6 小时(测试时可以设置短一点)
      - KAFKA_CFG_LOG_RETENTION_HOURS=6
      # 开启JMX监控
      - JMX_PORT=9999
      - TZ=Asia/Shanghai
    #volumes:
      #- ./kafka:/bitnami/kafka
    depends_on:
      - zoo1
  # Web 管理界面 另外也可以用exporter+prometheus+grafana的方式来监控 https://github.com/danielqsj/kafka_exporter
  kafka_manager:
    # name: moon-kafka-manager
    image: 'hlebalbau/kafka-manager:latest'
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zoo1:2181"
      APPLICATION_SECRET: letmein
      TZ: Asia/Shanghai
    depends_on:
      - zoo1
      - kafka

  grafana:
    # name: moon-grafana
    image: 'grafana/grafana:main'
    volumes:
      - /etc/localtime:/etc/localtime
      - ./grafana.ini:/etc/grafana/grafana.ini
    ports:
      - "3001:3000"
  
  influxdb:
    # name: moon-influxdb
    image: 'influxdb:latest'
    restart: always
    hostname: influxdb
    environment:
      - INFLUXDB_DB=telegraf
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=Welcome1
      - DOCKER_INFLUXDB_INIT_ORG=telegraf_org
      - DOCKER_INFLUXDB_INIT_BUCKET=telegraf_bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=admin_token
    volumes:
      - /etc/localtime:/etc/localtime
      - ./influxdb/data:/usr/share/influxdb/data
    ports:
      - "8086:8086"
  
  telegraf:
    # name: moon-telegraf
    image: 'telegraf:alpine'
    restart: always
    hostname: telegraf
    ports:
      - "8125:8125/udp"
    depends_on:
      - influxdb
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf
      - /etc/localtime:/etc/localtime
    environment:
      - TZ=Asia/Shanghai
    

  # moonapp1:
  #   networks:
  #     - default
  #   hostname: moonapp1
  #   restart: always
  #   build: ./moon-app1
  #   environment:
  #     TZ: Asia/Shanghai
  #   ports:
  #     - "8011:7001"

  # moonapp2:
  #   networks:
  #     - default
  #   hostname: moonapp2
  #   restart: always
  #   build: ./moon-app2
  #   environment:
  #     TZ: Asia/Shanghai
  #   ports:
  #     - "8012:7001"
